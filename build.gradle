plugins {
    id "com.github.spotbugs" version "2.0.0"
    id "io.codearte.nexus-staging" version "0.11.0"
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'pmd'
    apply plugin: 'checkstyle'
    apply plugin: "com.github.spotbugs"

    dependencies {
        testCompile "junit:junit:${project.property('junit.version')}"
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all"
    }

    clean {
        delete 'out'
    }

    test {
        systemProperty 'java.security.egd', 'file:///dev/urandom'
        testLogging {
            showStandardStreams = false
            exceptionFormat = 'full'
        }
    }

    spotbugs {
        toolVersion = '3.1.12'
        sourceSets = [sourceSets.main]
        ignoreFailures = true
        effort = "max"
        reportLevel = "high"
    }

    tasks.withType(Pmd) {
        ignoreFailures = true
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    tasks.withType(Checkstyle) {
        ignoreFailures = true
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier 'javadoc'
    }

    artifacts {
        archives sourcesJar, javadocJar
    }
    ext {
        user = 'xbib'
        projectName = 'sshd'
        projectDescription = 'SSHD server and client library for Java and Groovy'
        scmUrl = 'https://github.com/xbib/sshd'
        scmConnection = 'scm:git:git://github.com/xbib/sshd.git'
        scmDeveloperConnection = 'scm:git:git://github.com/xbib/sshd.git'
    }

    task sonatypeUpload(type: Upload) {
        group = 'publish'
        configuration = configurations.archives
        uploadDescriptor = true
        repositories {
            if (project.hasProperty('ossrhUsername')) {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    repository(url: uri(ossrhReleaseUrl)) {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }
                    snapshotRepository(url: uri(ossrhSnapshotUrl)) {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }
                    pom.project {
                        name projectName
                        description projectDescription
                        packaging 'jar'
                        inceptionYear '2016'
                        url scmUrl
                        organization {
                            name 'xbib'
                            url 'http://xbib.org'
                        }
                        developers {
                            developer {
                                id user
                                name 'JÃ¶rg Prante'
                                email 'joergprante@gmail.com'
                                url 'https://github.com/jprante'
                            }
                        }
                        scm {
                            url scmUrl
                            connection scmConnection
                            developerConnection scmDeveloperConnection
                        }
                        licenses {
                            license {
                                name 'The Apache License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                    }
                }
            }
        }
    }

    nexusStaging {
        packageGroup = "org.xbib"
    }

}
